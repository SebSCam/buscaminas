{"ast":null,"code":"import _asyncToGenerator from \"/home/sebscam/Code/spring-calculator/calculator-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { faCaretSquareLeft, faCaretSquareRight, faEraser, faSpinner } from '@fortawesome/free-solid-svg-icons';\nexport const HISTORY_PAGE_SIZE = 1;\nlet CalculatorComponent = class CalculatorComponent {\n  constructor(api) {\n    this.api = api;\n    this.screenValue = '';\n    this.upperScreenValue = '';\n    this.state = State.FirstNumber;\n    this.number1 = null;\n    this.number2 = null;\n    this.sign = null;\n    this.faCaretSquareLeft = faCaretSquareLeft;\n    this.faCaretSquareRight = faCaretSquareRight;\n    this.faEraser = faEraser;\n    this.faSpinner = faSpinner;\n    this.history = [];\n    this.currentHistoryShown = -1;\n    this.isLastHistoryElementShown = false;\n  }\n\n  ngOnInit() {\n    this.loadHistoryNextElement();\n  }\n\n  digitNumber(number) {\n    if (this.state == State.Result) {\n      this.reset();\n    }\n\n    this.screenValue += number;\n  }\n\n  digitMinus() {\n    if (this.screenValue == '') {\n      this.screenValue = '-';\n    } else {\n      this.digitSign('-');\n    }\n  }\n\n  digitSign(sign) {\n    if (this.screenValue == '') {\n      return;\n    }\n\n    this.number1 = parseInt(this.screenValue);\n    this.upperScreenValue = this.number1 + ' ' + sign;\n    this.screenValue = '';\n    this.sign = sign;\n    this.state = State.SecondNumber;\n  }\n\n  getResult() {\n    if (this.screenValue == '') {\n      return;\n    }\n\n    this.number2 = parseInt(this.screenValue);\n    this.upperScreenValue += ' ' + this.number2;\n    this.screenValue = '';\n    this.elaborateResult();\n  }\n\n  reset() {\n    this.state = State.FirstNumber;\n    this.screenValue = '';\n    this.upperScreenValue = '';\n    this.number1 = null;\n    this.number2 = null;\n    this.sign = null;\n    this.resetHistoryNavigation();\n  }\n\n  isSignButtonsEnabled() {\n    return this.state == State.FirstNumber || this.state == State.Result; // && this.state != State.Loading;\n  }\n\n  isMinusButtonEnabled() {\n    return this.isSignButtonsEnabled() || this.state == State.SecondNumber;\n  }\n\n  isResultButtonEnabled() {\n    return this.state == State.SecondNumber; // && this.state != State.Loading;\n  }\n\n  isLoadingVisible() {\n    return this.state == State.Loading;\n  }\n\n  elaborateResult() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      // mock\n      _this.state = State.Loading;\n      const signSymbol = SignSymbols[_this.sign]; // await new Promise( resolve => setTimeout(resolve, 500) );\n\n      try {\n        const equationObj = yield _this.api.solveEquation(_this.number1, _this.number2, signSymbol).toPromise();\n        const equation = equationObj;\n        _this.state = State.Result;\n        _this.history = [];\n\n        _this.showResult(equation);\n      } catch (error) {\n        alert('API Server error');\n\n        _this.reset();\n      }\n    })();\n  }\n\n  showResult(equation) {\n    this.screenValue = equation.result + '';\n  }\n\n  handleKeyboardEvents(keyPress) {\n    let key = keyPress.key;\n\n    switch (key) {\n      case '0':\n        this.digitNumber(key);\n        break;\n\n      case '1':\n        this.digitNumber(key);\n        break;\n\n      case '2':\n        this.digitNumber(key);\n        break;\n\n      case '3':\n        this.digitNumber(key);\n        break;\n\n      case '4':\n        this.digitNumber(key);\n        break;\n\n      case '5':\n        this.digitNumber(key);\n        break;\n\n      case '6':\n        this.digitNumber(key);\n        break;\n\n      case '7':\n        this.digitNumber(key);\n        break;\n\n      case '8':\n        this.digitNumber(key);\n        break;\n\n      case '9':\n        this.digitNumber(key);\n        break;\n\n      case '+':\n        this.digitSign(key);\n        break;\n\n      case '-':\n        this.digitSign(key);\n        break;\n\n      case '*':\n        this.digitSign(key);\n        break;\n\n      case '/':\n        this.digitSign(key);\n        break;\n\n      case '=':\n        this.getResult();\n        break;\n\n      case 'Enter':\n        this.getResult();\n        break;\n    }\n  } // Equation history and pagination handling\n\n\n  showHistoryPrevious() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      if (!_this2.isPreviousHistoryEnabled()) {\n        return;\n      }\n\n      let isMoreElementToShow = true;\n\n      if (_this2.currentHistoryShown + 1 > _this2.history.length - 1) {\n        _this2.state = State.Loading;\n        isMoreElementToShow = yield _this2.loadHistoryNextElement();\n        _this2.state = State.Result;\n      }\n\n      if (isMoreElementToShow) {\n        _this2.currentHistoryShown++;\n\n        _this2.showHistoryEquation();\n      } else {\n        _this2.isLastHistoryElementShown = true;\n      }\n    })();\n  }\n\n  isPreviousHistoryEnabled() {\n    return this.history && Array.isArray(this.history) && !this.isLastHistoryElementShown;\n  }\n\n  showHistoryNext() {\n    if (!this.isNextHistoryEnabled() || this.currentHistoryShown == 0) {\n      this.reset();\n      return;\n    }\n\n    this.state = State.Result;\n    this.currentHistoryShown--;\n    this.isLastHistoryElementShown = false;\n    this.showHistoryEquation();\n  }\n\n  isNextHistoryEnabled() {\n    return this.history && this.history.length > 0 && this.currentHistoryShown >= 0;\n  }\n\n  showHistoryEquation() {\n    const equation = this.history[this.currentHistoryShown];\n    const symbol = Object.keys(SignSymbols).find(key => SignSymbols[key] === equation.signSymbol);\n    this.upperScreenValue = equation.number1 + ' ' + symbol + ' ' + equation.number2;\n    this.screenValue = equation.result;\n  }\n\n  loadHistoryNextElement() {\n    const elementToLoad = this.currentHistoryShown + 1;\n    return this.api.getEquationsHistory(elementToLoad).toPromise().then(historySlice => {\n      if (!historySlice || historySlice.length == 0) {\n        return false;\n      }\n\n      this.history[elementToLoad] = historySlice[0];\n      return true;\n    });\n  }\n\n  resetHistoryNavigation() {\n    this.currentHistoryShown = -1;\n    this.isLastHistoryElementShown = false;\n  }\n\n};\nCalculatorComponent = __decorate([Component({\n  selector: 'app-calculator',\n  templateUrl: './calculator.component.html',\n  styleUrls: ['./calculator.component.scss'],\n  host: {\n    '(document:keypress)': 'handleKeyboardEvents($event)'\n  }\n})], CalculatorComponent);\nexport { CalculatorComponent };\nexport var State;\n\n(function (State) {\n  State[State[\"FirstNumber\"] = 0] = \"FirstNumber\";\n  State[State[\"SecondNumber\"] = 1] = \"SecondNumber\";\n  State[State[\"Result\"] = 2] = \"Result\";\n  State[State[\"Loading\"] = 3] = \"Loading\";\n})(State || (State = {}));\n\n;\nexport const SignSymbols = {\n  '+': '+',\n  '-': '-',\n  'x': 'x',\n  '/': ':'\n};","map":{"version":3,"sources":["/home/sebscam/Code/spring-calculator/calculator-frontend/src/app/components/calculator/calculator.component.ts"],"names":["__decorate","Component","faCaretSquareLeft","faCaretSquareRight","faEraser","faSpinner","HISTORY_PAGE_SIZE","CalculatorComponent","constructor","api","screenValue","upperScreenValue","state","State","FirstNumber","number1","number2","sign","history","currentHistoryShown","isLastHistoryElementShown","ngOnInit","loadHistoryNextElement","digitNumber","number","Result","reset","digitMinus","digitSign","parseInt","SecondNumber","getResult","elaborateResult","resetHistoryNavigation","isSignButtonsEnabled","isMinusButtonEnabled","isResultButtonEnabled","isLoadingVisible","Loading","signSymbol","SignSymbols","equationObj","solveEquation","toPromise","equation","showResult","error","alert","result","handleKeyboardEvents","keyPress","key","showHistoryPrevious","isPreviousHistoryEnabled","isMoreElementToShow","length","showHistoryEquation","Array","isArray","showHistoryNext","isNextHistoryEnabled","symbol","Object","keys","find","elementToLoad","getEquationsHistory","then","historySlice","selector","templateUrl","styleUrls","host"],"mappings":"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","sourcesContent":["import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { faCaretSquareLeft, faCaretSquareRight, faEraser, faSpinner } from '@fortawesome/free-solid-svg-icons';\nexport const HISTORY_PAGE_SIZE = 1;\nlet CalculatorComponent = class CalculatorComponent {\n    constructor(api) {\n        this.api = api;\n        this.screenValue = '';\n        this.upperScreenValue = '';\n        this.state = State.FirstNumber;\n        this.number1 = null;\n        this.number2 = null;\n        this.sign = null;\n        this.faCaretSquareLeft = faCaretSquareLeft;\n        this.faCaretSquareRight = faCaretSquareRight;\n        this.faEraser = faEraser;\n        this.faSpinner = faSpinner;\n        this.history = [];\n        this.currentHistoryShown = -1;\n        this.isLastHistoryElementShown = false;\n    }\n    ngOnInit() {\n        this.loadHistoryNextElement();\n    }\n    digitNumber(number) {\n        if (this.state == State.Result) {\n            this.reset();\n        }\n        this.screenValue += number;\n    }\n    digitMinus() {\n        if (this.screenValue == '') {\n            this.screenValue = '-';\n        }\n        else {\n            this.digitSign('-');\n        }\n    }\n    digitSign(sign) {\n        if (this.screenValue == '') {\n            return;\n        }\n        this.number1 = parseInt(this.screenValue);\n        this.upperScreenValue = this.number1 + ' ' + sign;\n        this.screenValue = '';\n        this.sign = sign;\n        this.state = State.SecondNumber;\n    }\n    getResult() {\n        if (this.screenValue == '') {\n            return;\n        }\n        this.number2 = parseInt(this.screenValue);\n        this.upperScreenValue += ' ' + this.number2;\n        this.screenValue = '';\n        this.elaborateResult();\n    }\n    reset() {\n        this.state = State.FirstNumber;\n        this.screenValue = '';\n        this.upperScreenValue = '';\n        this.number1 = null;\n        this.number2 = null;\n        this.sign = null;\n        this.resetHistoryNavigation();\n    }\n    isSignButtonsEnabled() {\n        return this.state == State.FirstNumber || this.state == State.Result; // && this.state != State.Loading;\n    }\n    isMinusButtonEnabled() {\n        return this.isSignButtonsEnabled() || this.state == State.SecondNumber;\n    }\n    isResultButtonEnabled() {\n        return this.state == State.SecondNumber; // && this.state != State.Loading;\n    }\n    isLoadingVisible() {\n        return this.state == State.Loading;\n    }\n    async elaborateResult() {\n        // mock\n        this.state = State.Loading;\n        const signSymbol = SignSymbols[this.sign];\n        // await new Promise( resolve => setTimeout(resolve, 500) );\n        try {\n            const equationObj = await this.api.solveEquation(this.number1, this.number2, signSymbol).toPromise();\n            const equation = equationObj;\n            this.state = State.Result;\n            this.history = [];\n            this.showResult(equation);\n        }\n        catch (error) {\n            alert('API Server error');\n            this.reset();\n        }\n    }\n    showResult(equation) {\n        this.screenValue = equation.result + '';\n    }\n    handleKeyboardEvents(keyPress) {\n        let key = keyPress.key;\n        switch (key) {\n            case '0':\n                this.digitNumber(key);\n                break;\n            case '1':\n                this.digitNumber(key);\n                break;\n            case '2':\n                this.digitNumber(key);\n                break;\n            case '3':\n                this.digitNumber(key);\n                break;\n            case '4':\n                this.digitNumber(key);\n                break;\n            case '5':\n                this.digitNumber(key);\n                break;\n            case '6':\n                this.digitNumber(key);\n                break;\n            case '7':\n                this.digitNumber(key);\n                break;\n            case '8':\n                this.digitNumber(key);\n                break;\n            case '9':\n                this.digitNumber(key);\n                break;\n            case '+':\n                this.digitSign(key);\n                break;\n            case '-':\n                this.digitSign(key);\n                break;\n            case '*':\n                this.digitSign(key);\n                break;\n            case '/':\n                this.digitSign(key);\n                break;\n            case '=':\n                this.getResult();\n                break;\n            case 'Enter':\n                this.getResult();\n                break;\n        }\n    }\n    // Equation history and pagination handling\n    async showHistoryPrevious() {\n        if (!this.isPreviousHistoryEnabled()) {\n            return;\n        }\n        let isMoreElementToShow = true;\n        if (this.currentHistoryShown + 1 > this.history.length - 1) {\n            this.state = State.Loading;\n            isMoreElementToShow = await this.loadHistoryNextElement();\n            this.state = State.Result;\n        }\n        if (isMoreElementToShow) {\n            this.currentHistoryShown++;\n            this.showHistoryEquation();\n        }\n        else {\n            this.isLastHistoryElementShown = true;\n        }\n    }\n    isPreviousHistoryEnabled() {\n        return this.history && Array.isArray(this.history)\n            && !this.isLastHistoryElementShown;\n    }\n    showHistoryNext() {\n        if (!this.isNextHistoryEnabled() || this.currentHistoryShown == 0) {\n            this.reset();\n            return;\n        }\n        this.state = State.Result;\n        this.currentHistoryShown--;\n        this.isLastHistoryElementShown = false;\n        this.showHistoryEquation();\n    }\n    isNextHistoryEnabled() {\n        return this.history && this.history.length > 0 &&\n            this.currentHistoryShown >= 0;\n    }\n    showHistoryEquation() {\n        const equation = this.history[this.currentHistoryShown];\n        const symbol = Object.keys(SignSymbols).find(key => SignSymbols[key] === equation.signSymbol);\n        this.upperScreenValue = equation.number1 + ' ' + symbol + ' ' + equation.number2;\n        this.screenValue = equation.result;\n    }\n    loadHistoryNextElement() {\n        const elementToLoad = this.currentHistoryShown + 1;\n        return this.api.getEquationsHistory(elementToLoad).toPromise()\n            .then((historySlice) => {\n            if (!historySlice || historySlice.length == 0) {\n                return false;\n            }\n            this.history[elementToLoad] = historySlice[0];\n            return true;\n        });\n    }\n    resetHistoryNavigation() {\n        this.currentHistoryShown = -1;\n        this.isLastHistoryElementShown = false;\n    }\n};\nCalculatorComponent = __decorate([\n    Component({\n        selector: 'app-calculator',\n        templateUrl: './calculator.component.html',\n        styleUrls: ['./calculator.component.scss'],\n        host: {\n            '(document:keypress)': 'handleKeyboardEvents($event)'\n        }\n    })\n], CalculatorComponent);\nexport { CalculatorComponent };\nexport var State;\n(function (State) {\n    State[State[\"FirstNumber\"] = 0] = \"FirstNumber\";\n    State[State[\"SecondNumber\"] = 1] = \"SecondNumber\";\n    State[State[\"Result\"] = 2] = \"Result\";\n    State[State[\"Loading\"] = 3] = \"Loading\";\n})(State || (State = {}));\n;\nexport const SignSymbols = {\n    '+': '+',\n    '-': '-',\n    'x': 'x',\n    '/': ':'\n};\n"]},"metadata":{},"sourceType":"module"}